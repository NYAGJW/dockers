#!/bin/sh

set -eu

# Add users from the host - if bind mounted.
if [ -r /etc/passwd.host ]; then
  grep -E ':2[0-9]{3}': /etc/passwd.host >> /etc/passwd
fi

# Add groups from the host - if bind mounted.
if [ -r /etc/group.host ]; then
  grep -E ':2[0-9]{3}': /etc/group.host >> /etc/group
fi

# Mount network drives - if defined in bind mount.
if [ -r /srv/cifs/mounts ]; then
  chown root:datascience /mnt
  chmod 750 /mnt
  while read -r line; do
    service="$(echo "$line" | cut -d: -f1)"
    mountpoint="$(echo "$line" | cut -d: -f2)"
    options="$(echo "$line" | cut -d: -f3)"
    mkdir "$mountpoint"
    mount -t cifs \
      -o "vers=2.0,credentials=/srv/cifs/credentials,noperm,${options}" \
      "$service" "$mountpoint" || true
  done < /srv/cifs/mounts
fi

# Switch to USER - if environment variable defined.
# Run sudo when calling apt or pip by creating wrapper scripts
# in /usr/local/bin that call the real script with sudo.
if [ -n "${USER-}" ]; then
  usermod -a -G sudo "$USER"
  echo '#!/bin/sh\nsudo /usr/bin/apt update && exec sudo /usr/bin/apt "$@"' > /usr/local/bin/apt
  chmod +x /usr/local/bin/apt
  echo '#!/bin/sh\nexec sudo /usr/bin/pip3 "$@"' > /usr/local/bin/pip3
  chmod +x /usr/local/bin/pip3
  ln -fs pip3 /usr/local/bin/pip
  if [ -n "${OLDPWD-}" -a -d "${OLDPWD-}" ]; then
    cd "$OLDPWD"
  else
    cd "$(getent passwd "$USER" | cut -d: -f6)"
  fi
  exec gosu "$USER" "$@"
else
  exec "$@"
fi
